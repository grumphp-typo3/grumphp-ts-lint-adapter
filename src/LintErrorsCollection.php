<?php
/**
 * Created by PhpStorm.
 * User: sebastian
 * Date: 06.02.18
 * Time: 09:55
 */

namespace Pluswerk\GrumphpTsLinter;

use \GrumPHP\Collection\LintErrorsCollection as GrumphpLintErrorsCollection;
use Helmich\TypoScriptLint\Linter\Report\Issue;


class LintErrorsCollection extends GrumphpLintErrorsCollection
{
    /**
     * @var array
     */
    private $errors;

    /**
     * @return string
     */
    public function __toString()
    {
        static $currentFileName = '';
        $errors = [];
        foreach ($this->getIterator() as $error) {
            /** @var LintError $error */
            if ($currentFileName === '') {
                $currentFileName = $error->getFilename();
                $errors[] = "\n\n";
                $errors[] = str_pad("", strlen($error->getFilename()) + 10, "-");
                $errors[] = "| File: " . $error->getFilename() . " |";
                $errors[] = str_pad("", strlen($error->getFilename()) + 10, "-");
            } else {
                if ($currentFileName !== $error->getFilename()) {
                    $errors[] = "\n\n";
                    $errors[] = str_pad("", strlen($error->getFilename()) + 10, "-");
                    $errors[] = "| File: " . $error->getFilename() . " |";
                    $errors[] = str_pad("", strlen($error->getFilename()) + 10, "-");
                    $currentFileName = $error->getFilename();
                }
            }
            /** @var Issue $issue */
            $issue = $error->getIssue();
            $line = $issue->getLine();
            $column = $issue->getColumn();
            $errors[] = "line:   " . $line . "\ncolumn: " . $column . "\nerror:  " . $issue->getMessage();
            $errors[] = "------------";
        }

        return implode(PHP_EOL, $errors);
    }

    public function add($element)
    {
        return parent::add($element); // TODO: Change the autogenerated stub
    }
}